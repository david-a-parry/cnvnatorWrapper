Generates the LCG dictionary file for each header file

    Usage:
      genreflex headerfile1.h [headerfile2.h] [options] [preprocesor options]
    
    Options:
      -s <file>, --selection_file=<file>
         Class selection file to specify for which classes the dictionary
         will be generated
         Format (XML):
           <lcgdict>
           [<selection>]
             <class [name="classname"] [pattern="wildname"] 
                    [file_name="filename"] [file_pattern="wildname"] 
                    [id="xxxx"] [type="vector"]/>
             <class name="classname" >
               <field name="m_transient" transient="true"/>
               <field name="m_anothertransient" transient="true"/>
               <properties prop1="value1" [prop2="value2"]/>
             </class>
             <function [name="funcname"] [pattern="wildname"] />
             <enum [name="enumname"] [pattern="wildname"] />
             <variable [name="varname"] [pattern="wildname"] />
           [</selection>]
           <exclusion>
             <class [name="classname"] [pattern="wildname"] />
               <method name="unwanted" />
             </class>
           ...
           </lcgdict>

      -o <file>, --output <file>
         Output file name. If an existing directory is specified instead of a file,
         then a filename will be build using the name of the input file and will
         be placed in the given directory. <headerfile>_rflx.cpp 

      --pool, --dataonly
         Generate minimal dictionary required for POOL persistency

      --interpreteronly
         Generate minimal dictionary required for interpreter

      --deep
         Generate dictionary for all dependend classes

      --split=[classdef]
         Generate a separate file for the given dictionary parts, currently supported part: classdef implementations.

      --reflex  (OBSOLETE)
         Generate Reflex dictionaries.

      --comments
         Add end-of-line comments in data and functions members as a property called "comment" 

      --iocomments
         Add end-of-line comments in data and functions members as a property called "comment", but only for comments relevant for ROOT I/O 

      --no_membertypedefs
         Disable the definition of class member typedefs 

      --no_templatetypedefs
         Disable resolving of typedefs in template parameters for selection names. E.g. std::vector<MYINT>.

      --fail_on_warnings
         The genreflex command fails (retuns the value 1) if any warning message is issued 

      --gccxmlpath=<path>
         Path path where the gccxml tool is installed.
         If not defined the standard PATH environ variable is used

      --gccxmlopt=<gccxmlopt>
         Options to be passed directly to gccxml

      --gccxmlpost=<xmlfile>
         Instead of invoking GCCXML process the xmlfile generated by GCCXML. Mainly useful for debugging.

      -c <file>, --capabilities=<file>
         Generate the capabilities file to be used by the SEAL Plugin Manager. This file
         lists the names of all classes for which the reflection is formation is provided.

      --rootmap=<file>
         Generate the rootmap file to be used by ROOT/CINT. This file lists the names of 
         all classes for which the reflection is formation is provided.

      --rootmap-lib=<library>
         Library name for the rootmap file.

      --debug
         Print extra debug information while processing. Keep intermediate files

      --quiet
         Do not print informational messages

      -h, --help
         Print this help

     
