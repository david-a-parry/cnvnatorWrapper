BEGIN_HTML
<center><h1>The Event Display classes</h1></center>
<p><hr><p>

    Eve is a ROOT module based on experiment-independent part of the
    ALICE event display developed in cooperation between ALICE offline
    project and ROOT during the last two years. It has been used in
    ALICE for more than a year to perform high-level event
    visualization, debugging of simulation and reconstruction code as
    well as for raw-data visualization.

    <p>
    Papers describing Eve (older ones still using the old name - Reve):
    <ul>

    <li> <a
    href="http://pos.sissa.it//archive/conferences/070/103/ACAT08_103.pdf">
    EVE - Event Visualization Environment of the ROOT framework</a>,
    presented at ACAT 2008.

    <li> <a
    href="http://indico.cern.ch/contributionDisplay.py?contribId=25&confId=13356">
    Event Visualization Environment of the ALICE experiment</a>,
    presented at ROOT Workshop 2007.

    <li> <a
    href="http://indico.cern.ch/contributionDisplay.py?contribId=442&sessionId=23&confId=3580">Raw-data
    display and visual reconstruction validation in ALICE</a>,
    presented at CHEP 2007.

    </ul>

    <p>
    Eve is built on top of ROOT's GUI, GL and GED infrastructure and
    delivers the following main features:

    <ul>

      <li> Base-classes for representation of visual objects that can
      be presented in list-tree views, object-editors and rendered
   via OpenGL (<tt>TEveElement</tt> and sub-classes).

      <li> Application manager class <tt>TEveManager</tt> for top-level
   management of elements, GUI components, geometries and events;

      <li> Classes for presentation of full TGeo geometries
   (<tt>TEveGeoNode</tt> and <tt>TEveGeoTopNode</tt>) as well as of
   simplifed geometries via extraction of shape-data
   (<tt>TEveGeoShape</tt>).

   <p><img alt="CMS geometry." src="gif/eve-cmsgeo.png">

      <li> Classes for presentation of trajectories or tracks
   (<tt>TEveTrack</tt>, <tt>TEveTrackPropagator</tt>) and hits or
   clusters (<tt>TEvePointSet</tt>, <tt>TEvePointSetArray</tt>).

   <p><img alt="A simulated ALICE pp@14TeV event in 3D." src="gif/eve-alice3d.png">

      <li> Base-classes for presentation of raw-data or digits
   (<tt>TEveDigitSet</tt>, <tt>TEveQuadSet</tt> and
   <tt>TEveBoxSet</tt>). A collection of objects can be assigned
   common signal-to-color mapping (<tt>TEveRGBAPelette</tt>) and
   surrounding frame (<tt>TEveFrameBox</tt>).

   <p><img alt="Hexagonal and rectangular digits." src="gif/eve-quadset.png">

      <li> Base-classes for 2D projections with dynamically controllable
   fish-eye magnification of the vertex region
   (<tt>TEveProjectionManager</tt> and
   <tt>TEveProjection</tt>). Tracks, points and geometries can be
   projected automatically. R-phi and Rho-z projections are
   currently supported.

   <p><img alt="A r-phi projection with fish-eye transformation
       of a simulated ALICE pp@14TeV event." src="gif/eve-aliceproj.png">

      <li> <tt>TriangleSet</tt> class for presentation of generic
   triangle meshes.

   <p><img alt="3DS shuttle object." src="gif/eve-3ds.png">

    </ul>
END_HTML
